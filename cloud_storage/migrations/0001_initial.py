# Generated by Django 3.0 on 2020-03-23 19:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('content', '0017_auto_20200320_1618'),
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text="The file's file", upload_to='', verbose_name='file')),
                ('display_name', models.CharField(blank=True, help_text='File display name', max_length=255, null=True, verbose_name='display name')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_changed', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(help_text='The artist that uploaded and owns this file', limit_choices_to={'platform': 'Revibe'}, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='content.Artist', verbose_name='owner')),
            ],
            options={
                'verbose_name': 'file',
                'verbose_name_plural': 'files',
            },
        ),
        migrations.CreateModel(
            name='FileShare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('artist', models.ForeignKey(help_text='The Artist the file is shared with', on_delete=django.db.models.deletion.CASCADE, related_name='file_shares', to='content.Artist', verbose_name='artist')),
                ('file', models.ForeignKey(help_text='The related File object', on_delete=django.db.models.deletion.CASCADE, related_name='file_shares', to='cloud_storage.File', verbose_name='file')),
            ],
        ),
        migrations.AddField(
            model_name='file',
            name='shared_with',
            field=models.ManyToManyField(help_text='Artists that have edit access to the file', limit_choices_to={'platform': 'Revibe'}, related_name='shared_files', through='cloud_storage.FileShare', to='content.Artist', verbose_name='shared with'),
        ),
    ]
