# Generated by Django 3.0 on 2020-05-07 14:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Identifying name of the event', max_length=255, unique=True, verbose_name='name')),
                ('desired_action', models.CharField(help_text='Action the user is desired to take after receiving this notification', max_length=255, verbose_name='desired action')),
                ('active', models.BooleanField(blank=True, default=True, help_text='The event is active and will send notifications. Please set this to False rather than deleting the object; deleting the object will inhibit analysis.', verbose_name='active')),
                ('description', models.TextField(blank=True, help_text='Description of the event', null=True, verbose_name='description')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_changed', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_template', models.TextField(help_text='The core text template of the notification. This is all that will be sent unless using email notifications, in which case this will the main text of the email in the email template.', verbose_name='text template')),
                ('html', models.TextField(blank=True, help_text='The HTML template to send as the email. If not sending email notification, the template will not be used. See the documentation for proper configuration of notification HTML templates.', null=True, verbose_name='HTML template')),
                ('description', models.TextField(blank=True, help_text='Description of the template', null=True, verbose_name='description')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_changed', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(blank=True, help_text='Event to use this as a notification for. If set to Null, this template will not be able to be used.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templates', to='notifications.Event', verbose_name='event')),
            ],
            options={
                'verbose_name': 'notification template',
                'verbose_name_plural': 'notification templates',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_artist', models.BooleanField(blank=True, default=False, help_text='The event is an artist notification, not a user notification', verbose_name='is artist')),
                ('action_taken', models.BooleanField(blank=True, default=None, help_text="The action has been taken by the user. Treat it like False if it's been 'x' days since the notification was sent", null=True, verbose_name='action taken')),
                ('date_of_action', models.DateTimeField(blank=True, help_text='Date & time the desired action was taken', null=True, verbose_name='date of action')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_changed', models.DateField(auto_now=True)),
                ('event_template', models.ForeignKey(help_text='The the event template that sent this notification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='notifications.NotificationTemplate', verbose_name='event template')),
                ('user', models.ForeignKey(blank=True, help_text='The user that was sent the notification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'notification',
                'verbose_name_plural': 'notifications',
            },
        ),
    ]
